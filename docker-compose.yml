services:
  server:
    image: s13121312/capstoneback:latest
    ports:
      - "8080:8080"
    depends_on:
      my-db:
        condition: service_healthy
      my-cache-server:
        condition: service_healthy
    restart: always
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - TZ=Asia/Seoul

  nginx:
    image: nginx:latest
    container_name: nginx-capstone
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
#    depends_on:
#      - server
    restart: always

#  certbot:
#    image: certbot/certbot
#    container_name: certbot
#    volumes:
#      - ./certbot/www:/var/www/certbot
#      - ./certbot/conf:/etc/letsencrypt
#    entrypoint: >
#      sh -c "certbot certonly --webroot -w /var/www/certbot
#      --email wjdals980424@email.com --agree-tos --no-eff-email
#      -d speechmate.site"

  my-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: capstone1234!
      MYSQL_DATABASE: capstonedb
    command: --innodb_buffer_pool_size=128M --max_connections=20   #메모리 사용량을 128MB로 제한 동시 연결 수를 줄임
    volumes:
      - ./mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  my-cache-server:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
